@model ReviewViewModel

@{
    ViewData["Title"] = Model.Review.Title;
}

@{
    await Html.RenderPartialAsync("Header", Model);
}

<div class="uk-border-rounded uk-background-muted mt-3 p-3">
    <div class="d-flex gap-4 align-items-center">
        <span class="uk-label uk-background-secondary">@Model.Review.Group</span>
        <span>@Model.Review.CreateTime.ToString("dd.MM.yyyy", CultureInfo.InvariantCulture)</span>
    </div>
    <div class="mt-4">
        <div>
            @foreach (var tag in Model.Review.Tags.Select(t => t.Name))
            {
                <span class="uk-label uk-background-secondary">@tag</span>
            }
        </div>
        <h1 class="mt-2"><b>@Model.Review.Title</b></h1>
        <span>Leisure: <b>@Model.Review.Leisure</b></span>
        <div class="d-flex align-items-center justify-content-between uk-background-default uk-border-pill py-1 px-3 mt-2">
            <div class="d-flex align-items-center gap-2">
                <span uk-icon="user"></span>
                <div class="d-flex flex-column">
                    <a href="/Profile/@Model.Review.Author.UserName" class="uk-link">@Model.Review.Author.UserName</a>
                    <span class="uk-text-small uk-text-muted">Review author</span>
                </div>
            </div>
            <div uk-tooltip="title: Rating from the author; pos: top-left" style="width: fit-content">
                <span uk-icon="happy"></span> @Model.Review.AuthorRate/10
            </div>
        </div>
        <div>
            <div uk-tooltip="title: Number of likes; pos: bottom-left">
                <span uk-icon="heart"></span> @Model.Review.LikedUsers.Count()
            </div>
        </div>
        <div class="uk-cover-container mx-0 mx-md-5 mt-4 flex gap-3 align-items-center justify-content-center">
            <img class="get-image" id="illustration-image" data-file-id="@Model.Review.IllustrationId" uk-cover">
            <div id="illustraion-spinner" uk-spinner style="display: none"></div>
        </div>
        <div id="content" class="mt-4">@Model.Review.Content</div>
        @if (Model.IsAuthorized && !Model.Review.LikedUsers.Any(u => u.Id == Model.CurrentUser.Id))
        {
            <div id="like-panel" class="flex flex-column flex-sm-row gap-2 justify-content-center align-items-center">
                <span>Do you like this review?</span>
                <button id="like-review-button" class="uk-button uk-border-rounded uk-button-default uk-label-success">
                    <div id="button-text"><span uk-icon="heart"></span> Like</div>
                    <div id="button-spinner" uk-spinner style="display: none"></div>
                </button>
            </div>
        }
    </div>
</div>
<div class="uk-border-rounded uk-background-muted mt-3 p-3">
    <h2 class="text-center">Comments</h2>
    @if (Model.IsAuthorized)
    {
        <div class="d-flex flex-column gap-2 my-5">
            <h4 class="text-center">Write a comment</h4>
            <textarea class="uk-textarea uk-border-rounded" id="comment-input"></textarea>
            <button class="uk-button uk-button-primary uk-border-rounded" id="send-comment-button">
                <div id="button-text">Send</div>
                <div id="button-spinner" uk-spinner style="display: none"></div>
            </button>
        </div>
    }
    <div id="comment-template" style="display: none">
        @{
            await Html.RenderPartialAsync("Comment", new Comment() { Author = new(), CreateTime = new() });
        }
    </div>
    @if (Model.Review.Comments.Count() == 0)
    {
        <div id="no-comments-text" class="text-center m-3">There are no comments</div>
    }
    <div id="comments">
        @foreach (var comment in Model.Review.Comments.OrderByDescending(c => c.CreateTime))
        {
            await Html.RenderPartialAsync("Comment", comment);
        }
    </div>
</div>

<div id="review-info" data-id="@Model.Review.Id"></div>

@section Scripts {
    <script src="~/lib/showdown/showdown.min.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/base.js"></script>
    <script src="~/js/review.js"></script>
}