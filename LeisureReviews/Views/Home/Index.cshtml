@model ReviewsListViewModel

@{
    ViewData["Title"] = "Home Page";
}

@{
    await Html.RenderPartialAsync("Header", Model);
}


<div class="uk-border-rounded uk-background-muted mt-3 py-5 px-3">
    <div class="d-flex flex-column flex-md-row gap-2 gap-md-4 align-items-center justify-content-center">
        @foreach (var valuePair in ReviewSortTargetExtensions.StringValues)
        {
            if (valuePair.Key == Model.ReviewSortModel.Target)
            {
                <a href="/@valuePair.Key/Descending" class="uk-button uk-button-secondary uk-disabled uk-border-rounded col-12 col-md-4">@valuePair.Value</a>
            }
            else
            {
                <a href="/@valuePair.Key/Descending" class="uk-button uk-button-default uk-border-rounded col-12 col-md-4">@valuePair.Value</a>
            }
        }
    </div>
    <div class="d-flex flex-column gap-4 align-items-center mt-3">
        @if (Model.Reviews.Where(r => !r.IsDeleted).Count() == 0)
        {
            <div>There are no reviews</div>
        }
        @foreach (var review in Model.Reviews)
        {
            if (!review.IsDeleted)
                await Html.RenderPartialAsync("ReviewCard", new ReviewCardViewModel 
                { 
                    Review = review,
                    CanEdit = false
                });
        }
    </div>
    @{
        await Html.RenderPartialAsync("Pagination", Model);
    }
</div>

@section Scripts {
    
}