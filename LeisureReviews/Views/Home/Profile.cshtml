@model ProfileViewModel

@{
    ViewData["Title"] = Model.User.UserName;
}

@{
    await Html.RenderPartialAsync("Header", Model);
}

<div class="uk-border-rounded uk-background-muted mt-3 py-5 px-3">
    <div class="d-flex align-items-center gap-1">
        <span uk-icon="user"></span>
        <h2 class="m-0">@Model.User.UserName</h2>
    </div>
</div>

<div class="uk-border-rounded uk-background-muted mt-3 px-2 py-3 d-flex flex-column gap-3">
    <h3 class="m-0 text-center">Rewiews</h3>
    @if (Model.CanEdit)
    {
        <form asp-action="NewReview" asp-controller="Home" method="get" class="d-flex justify-content-center">
            <button class="uk-button uk-button-primary uk-border-rounded">Create new</button>
        </form>
    }
    <div class="d-flex flex-column gap-4 align-items-center">
        @if (Model.Reviews.Where(r => !r.IsDeleted).Count() == 0)
        {
            <div>There are no reviews</div>
        }
        @foreach (var review in Model.Reviews)
        {
            if (!review.IsDeleted)
                await Html.RenderPartialAsync("ReviewCard", new ReviewCardViewModel { Review = review, CanEdit = Model.CanEdit });
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/profile.js"></script>
}